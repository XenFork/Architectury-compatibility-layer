plugins {
    id 'groovy'
//    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'signing'
    id "org.jetbrains.kotlin.jvm" version "1.9.21"
    id 'maven-publish'
}

group = 'io.github.xenfork'
version = "$acl_version"

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://maven.minecraftforge.net/" }
}

dependencies {
    implementation(gradleApi())
    implementation(localGroovy())
    implementation("dev.architectury:architectury-loom:1.5-SNAPSHOT")
    implementation('commons-io:commons-io:2.15.0')

//    implementation('com.google.code.gson:gson:2.10.1')
//    implementation('com.fasterxml.jackson.core:jackson-databind:2.15.2')
    implementation('com.google.guava:guava:32.1.3-jre')
    implementation('cn.hutool:hutool-all:5.8.25')
//    implementation('org.ow2.asm:asm:9.6')
//    implementation('org.ow2.asm:asm-analysis:9.6')
//    implementation('org.ow2.asm:asm-commons:9.6')
//    implementation('org.ow2.asm:asm-tree:9.6')
//    implementation('org.ow2.asm:asm-util:9.6')
//    implementation('net.fabricmc:stitch:0.6.2') {
//        exclude module:"enigma"
//        exclude module:"mercury"
//    }
//    implementation('dev.architectury:tiny-remapper:1.10.24')
//    implementation('net.fabricmc:access-widener:2.1.0')
//    implementation('net.fabricmc:mapping-io:0.4.2')
//    implementation('net.fabricmc:lorenz-tiny:4.0.2') { transitive false }
//    implementation('dev.architectury:refmap-remapper:1.0.5')
//    implementation('dev.architectury:mercury:0.1.2.15')
//    implementation('org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.7.0') { transitive false }
//    implementation('net.minecraftforge:installertools:1.2.0')
//    implementation('org.cadixdev:lorenz:0.5.3')
//    implementation('de.oceanlabs.mcp:mcinjector:3.8.0')
//    //noinspection VulnerableLibrariesLocal
//    implementation('com.opencsv:opencsv:5.9')
//    implementation('net.minecraftforge:DiffPatch:2.0.7')
//    implementation('com.mojang:datafixerupper:6.0.8')
//    implementation('dev.architectury:at:1.0.1')
//    implementation('com.electronwill.night-config:toml:3.6.6')
//
//    implementation("me.shedaniel:forgified-fabric-loom:0.5.16")
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.21')
    implementation("architectury-plugin:architectury-plugin.gradle.plugin:3.4-SNAPSHOT")

    implementation("com.github.johnrengelman:shadow:8.1.1")
//    implementation 'org.ow2.asm:asm:9.6'
//    implementation 'org.ow2.asm:asm-commons:9.6'
//    implementation 'org.ow2.asm:asm-analysis:9.6'
//    implementation 'org.ow2.asm:asm-util:9.6'
//    implementation 'org.ow2.asm:asm-tree:9.6'
//    implementation('com.android.tools.build:gradle:8.1.3') {
//        exclude group:'org.ow2.asm'
//    }
}

//using ★ and ☆
gradlePlugin {
    website = "https://github.com/XenFork/Architectury-compatibility-layer"
    vcsUrl = "https://github.com/XenFork/Architectury-compatibility-layer.git"
    plugins {
        preAcl {
            id = "io.github.xenfork.acl.pre"
            implementationClass = "io.github.xenfork.acl.settings.MainSettings"
            displayName = "Pre Architectury compatibility layer"
            description = "Pre set acl plugin"
            tags.addAll("acl", "architectury", "minecraft", "forge", "fabric", "neo-forge")
        }// ☆ to step build-acl
        "buildAcl" {
            id = "io.github.xenfork.acl.build"
            implementationClass = "io.github.xenfork.acl.projects.Main"
            displayName = "Build Architectury compatibility layer"
            description = "Build set acl plugin"
            tags.addAll("acl", "architectury", "minecraft", "forge", "fabric", "neo-forge")
        }// ☆
        "acl" {
            id = "io.github.xenfork.acl"
            implementationClass = "io.github.xenfork.acl.MainAware"
            displayName = "Architectury compatibility layer"
            description = "set acl plugin"
            tags.addAll("acl", "architectury", "minecraft", "forge", "fabric", "neo-forge")
        }// ★★★★★★
    }
}



jar {
    enabled = true
    zip64 = true
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    failOnError = false
    options {
        encoding = "UTF-8"
        locale = "en_US"
        windowTitle = "${project.name}-${project.version}-Javadoc"
        if (this instanceof StandardJavadocDocletOptions) {
            charSet = "UTF-8"
            isAuthor = true
            links("https://docs.oracle.com/en/java/javase/17/docs/api/")
        }
    }
}



sourcesJar {
    archiveClassifier.set("sources")

    from sourceSets.main.allSource
}

publishing.publications {
//    register("mavenJava", MavenPublication) {
//        groupId project.group
//        artifactId "acl"
//        version project.version
//        from components.java
//        description "This is architectury plugin and architectury loom compatibility layer"
////        pom {
////            name = "Architectury compatibility layer"
////            description = "This is architectury plugin and architectury loom compatibility layer"
////            url = "https://github.com/XenFork/Architectury-compatibility-layer"
////            licenses {
////                license {
////                    name = "MIT"
////                    url = "http://www.opensource.org/licenses/mit-license.php"
////                }
////            }
////            organization {
////                name = "XenFork"
////                url = "https://github.com/XenFork"
////            }
////            developers {
////                developer {
////                    id = "baka4n"
////                    name = "baka4n"
////                    email = "qq47489951@gmail.com"
////                }
////            }
////            scm {
////                connection = "scm:git:https://github.com/XenFork/Architectury-compatibility-layer.git"
////                developerConnection = "scm:git:https://github.com/XenFork/Architectury-compatibility-layer.git"
////                url = "https://github.com/XenFork/Architectury-compatibility-layer/tree/master"
////            }
////        }
//    }
}
publishing.repositories {
//    mavenLocal()
//    maven {
//        name("OSSRH")
//        url(
//                project.version.toString().endsWith("-SNAPSHOT") ?
//                        "https://s01.oss.sonatype.org/content/repositories/snapshots/" :
//                        "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//        )
//        credentials {
//            username(OSSRH_USERNAME)
//            password(OSSRH_PASSWORD)
//        }
//    }

}

signing {
    if (!project.name.toString().endsWith("-SNAPSHOT") || Boolean.parseBoolean(System.getProperty("gpg.signing", "true"))) {
        useGpgCmd()
        for (final Publication name in publishing.publications) {
            sign(name)
        }
//        useInMemoryPgpKeys(keyId, password)

//        sign(publishing.publications)
    }
}






allprojects {
    repositories {
        maven {
            url "https://maven.architectury.dev/"
        }
        maven {
            url "https://maven.fabricmc.net/"
        }
    }
}